apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId 'com.androidpotato'
        minSdkVersion 18
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "AndroidPotato-V${defaultConfig.versionName}-${buildDate()}.apk"
                }
            }
        }
        debug {
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "AndroidPotato-V${defaultConfig.versionName}-${buildDate()}-Debug.apk"
                }
            }
        }
    }
    productFlavors {
    }
    sourceSets {
        main {
            jniLibs.srcDirs 'libs'
        }
    }

}
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2'
    }
}
greendao {
    schemaVersion 1
    daoPackage "com.androidpotato.greendao"
    targetGenDir 'src/main/java'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    implementation project(':library')
    // =================== support ===================
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    // =================== gson ===================
    implementation 'com.google.code.gson:gson:2.8.4'

    // =================== okhttp3 ===================
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okio:okio:1.14.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'

    // =================== rxjava2 ===================
    implementation "io.reactivex.rxjava2:rxjava:2.1.17"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    // =================== baidu map ===================
    implementation files('libs/BaiduLBS_Android.jar')

    // =================== butterknife ===================
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    // =================== rxlifecycle2 ===================
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.2'
    // If you want to bind to Android-specific lifecycles
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android:2.2.2'
    // If you want pre-written Activities and Fragments you can subclass as providers
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.2'
    // If you want pre-written support preference Fragments you can subclass as providers
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components-preference:2.2.2'
//    // If you want to use Navi for providers
//    implementation 'com.trello.rxlifecycle2:rxlifecycle-navi:2.2.2'
//    // If you want to use Android Lifecycle for providers
//    implementation 'com.trello.rxlifecycle2:rxlifecycle-android-lifecycle:2.2.2'

    // =================== greendao ===================
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'org.greenrobot:greendao-generator:3.2.2'

    // =================== retrofit2 ===================
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'//ConverterFactory的Gson依赖包
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'//ConverterFactory的String依赖包
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.2.0' //适配器
}

static def buildDate() {
    return new Date().format("yyyyMMdd", TimeZone.getDefault())
}

static def buildTime() {
    return new Date().format("yyyy-MM-dd HH:mm", TimeZone.getDefault() + "\"")
}